---
applications:
- name: deploy-service
  host: deploy-service
  memory: 1024M
  instances: 1
  path: ../${project.build.finalName}.war
  buildpack: java_buildpack
  services:
    - deploy-service-database
  env:
    VERSION: ${project.version}
    XS_TYPE: CF
    XS_TARGET_URL: https://api.cf.sap.hana.ondemand.com
    DB_TYPE: POSTGRESQL
    CATALINA_OPTS: "-Dorg.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH=true"
    PLATFORMS: >
      []
    PLATFORMS_V2: &V2_LIKE_PLATFORMS >
      [
        {
          "name": "CLOUD-FOUNDRY",
          "module-types": [
            { "name": "custom" },
            { "name": "javascript.nodejs" },
            { "name": "java", "parameters": { "buildpack": "java_buildpack" }},
            { "name": "java.tomcat", "parameters": { "buildpack": "java_buildpack" }, "properties": { "TARGET_RUNTIME": "tomcat" }},
            { "name": "java.tomee",  "parameters": { "buildpack": "java_buildpack" }, "properties": { "TARGET_RUNTIME": "tomee" }},
            { "name": "staticfile", "parameters": { "buildpack": "staticfile_buildpack" }},
            { "name": "ruby", "parameters": { "buildpack": "ruby_buildpack" }},
            { "name": "nodejs", "parameters": { "buildpack": "nodejs_buildpack" }},
            { "name": "go", "parameters": { "buildpack": "go_buildpack" }},
            { "name": "python", "parameters": { "buildpack": "python_buildpack" }},
            { "name": "php", "parameters": { "buildpack": "php_buildpack" }},
            { "name": "binary", "parameters": { "buildpack": "binary_buildpack" }},
            { "name": "dotnet_core", "parameters": { "buildpack": "dotnet_core_buildpack" }}
          ],
          "resource-types": [
            { "name": "mongodb", "parameters": { "service": "mongodb", "service-plan": "v3.0-dev", "type": "managed-service" }},
            { "name": "postgresql", "parameters": { "service": "postgresql", "service-plan": "v9.4-dev", "type": "managed-service" }},
            { "name": "rabbitmq", "parameters": { "service": "rabbitmq", "service-plan": "v3.6-dev", "type": "managed-service" }},
            { "name": "redis", "parameters": { "service": "redis", "service-plan": "v3.0-dev", "type": "managed-service" }},
            { "name": "influxdb", "parameters": { "service": "influxdb", "service-plan": "v0.13-container", "type": "managed-service" }},
            { "name": "org.cloudfoundry.user-provided-service", "parameters": { "type": "user-provided-service" }},
            { "name": "org.cloudfoundry.managed-service", "parameters": { "type": "managed-service" }},
            { "name": "org.cloudfoundry.existing-service", "parameters": { "type": "existing-service" }},
            { "name": "org.cloudfoundry.existing-service-key", "parameters": { "type": "existing-service-key" }},
            { "name": "mta-provided", "parameters": { "type": "mta-provides-dependency" }},
            { "name": "configuration", "parameters": { "type": "configuration" }},
            { "name": "autoscaler", "parameters": { "service": "autoscaler", "service-plan": "lite", "type": "managed-service" }},
            { "name": "application-logs", "parameters": { "service": "application-logs", "service-plan": "lite", "type": "managed-service" }},
            { "name": "connectivity", "parameters": { "service": "connectivity", "service-plan": "lite", "type": "managed-service" }},
            { "name": "feature-flags", "parameters": { "service": "feature-flags", "service-plan": "trial", "type": "managed-service" }},
            { "name": "metering", "parameters": { "service": "metering", "service-plan": "standard", "type": "managed-service" }},
            { "name": "ml-foundation-services", "parameters": { "service": "ml-foundation-services", "service-plan": "lite", "type": "managed-service" }},
            { "name": "objectstore", "parameters": { "service": "objectstore", "service-plan": "s3-standard", "type": "managed-service" }}
          ]
        }
      ]
    PLATFORMS_V3: *V2_LIKE_PLATFORMS
    TARGETS: >
      []
    TARGETS_V2: >
      []
    TARGETS_V3: >
      []
    SKIP_SSL_VALIDATION: true
